// Code generated by ent, DO NOT EDIT.

package store

import (
	"time"

	"github.com/FischukSergey/chat-service/internal/store/chat"
	"github.com/FischukSergey/chat-service/internal/store/message"
	"github.com/FischukSergey/chat-service/internal/store/problem"
	"github.com/FischukSergey/chat-service/internal/store/schema"
	"github.com/FischukSergey/chat-service/internal/types"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	chatFields := schema.Chat{}.Fields()
	_ = chatFields
	// chatDescClientID is the schema descriptor for client_id field.
	chatDescClientID := chatFields[1].Descriptor()
	// chat.ClientIDValidator is a validator for the "client_id" field. It is called by the builders before save.
	chat.ClientIDValidator = func() func(string) error {
		validators := chatDescClientID.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(client_id string) error {
			for _, fn := range fns {
				if err := fn(client_id); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// chatDescCreatedAt is the schema descriptor for created_at field.
	chatDescCreatedAt := chatFields[2].Descriptor()
	// chat.DefaultCreatedAt holds the default value on creation for the created_at field.
	chat.DefaultCreatedAt = chatDescCreatedAt.Default.(func() time.Time)
	// chatDescUpdatedAt is the schema descriptor for updated_at field.
	chatDescUpdatedAt := chatFields[3].Descriptor()
	// chat.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	chat.DefaultUpdatedAt = chatDescUpdatedAt.Default.(func() time.Time)
	// chat.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	chat.UpdateDefaultUpdatedAt = chatDescUpdatedAt.UpdateDefault.(func() time.Time)
	// chatDescID is the schema descriptor for id field.
	chatDescID := chatFields[0].Descriptor()
	// chat.DefaultID holds the default value on creation for the id field.
	chat.DefaultID = chatDescID.Default.(func() types.ChatID)
	messageFields := schema.Message{}.Fields()
	_ = messageFields
	// messageDescBody is the schema descriptor for body field.
	messageDescBody := messageFields[1].Descriptor()
	// message.BodyValidator is a validator for the "body" field. It is called by the builders before save.
	message.BodyValidator = messageDescBody.Validators[0].(func(string) error)
	// messageDescAuthorID is the schema descriptor for author_id field.
	messageDescAuthorID := messageFields[2].Descriptor()
	// message.AuthorIDValidator is a validator for the "author_id" field. It is called by the builders before save.
	message.AuthorIDValidator = messageDescAuthorID.Validators[0].(func(string) error)
	// messageDescIsVisibleForClient is the schema descriptor for is_visible_for_client field.
	messageDescIsVisibleForClient := messageFields[3].Descriptor()
	// message.DefaultIsVisibleForClient holds the default value on creation for the is_visible_for_client field.
	message.DefaultIsVisibleForClient = messageDescIsVisibleForClient.Default.(bool)
	// messageDescIsVisibleForManager is the schema descriptor for is_visible_for_manager field.
	messageDescIsVisibleForManager := messageFields[4].Descriptor()
	// message.DefaultIsVisibleForManager holds the default value on creation for the is_visible_for_manager field.
	message.DefaultIsVisibleForManager = messageDescIsVisibleForManager.Default.(bool)
	// messageDescIsBlocked is the schema descriptor for is_blocked field.
	messageDescIsBlocked := messageFields[5].Descriptor()
	// message.DefaultIsBlocked holds the default value on creation for the is_blocked field.
	message.DefaultIsBlocked = messageDescIsBlocked.Default.(bool)
	// messageDescIsService is the schema descriptor for is_service field.
	messageDescIsService := messageFields[6].Descriptor()
	// message.DefaultIsService holds the default value on creation for the is_service field.
	message.DefaultIsService = messageDescIsService.Default.(bool)
	// messageDescCreatedAt is the schema descriptor for created_at field.
	messageDescCreatedAt := messageFields[7].Descriptor()
	// message.DefaultCreatedAt holds the default value on creation for the created_at field.
	message.DefaultCreatedAt = messageDescCreatedAt.Default.(func() time.Time)
	// messageDescID is the schema descriptor for id field.
	messageDescID := messageFields[0].Descriptor()
	// message.DefaultID holds the default value on creation for the id field.
	message.DefaultID = messageDescID.Default.(func() types.MessageID)
	problemFields := schema.Problem{}.Fields()
	_ = problemFields
	// problemDescManagerID is the schema descriptor for manager_id field.
	problemDescManagerID := problemFields[1].Descriptor()
	// problem.ManagerIDValidator is a validator for the "manager_id" field. It is called by the builders before save.
	problem.ManagerIDValidator = problemDescManagerID.Validators[0].(func(string) error)
	// problemDescCreatedAt is the schema descriptor for created_at field.
	problemDescCreatedAt := problemFields[3].Descriptor()
	// problem.DefaultCreatedAt holds the default value on creation for the created_at field.
	problem.DefaultCreatedAt = problemDescCreatedAt.Default.(func() time.Time)
	// problemDescUpdatedAt is the schema descriptor for updated_at field.
	problemDescUpdatedAt := problemFields[4].Descriptor()
	// problem.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	problem.DefaultUpdatedAt = problemDescUpdatedAt.Default.(func() time.Time)
	// problem.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	problem.UpdateDefaultUpdatedAt = problemDescUpdatedAt.UpdateDefault.(func() time.Time)
	// problemDescID is the schema descriptor for id field.
	problemDescID := problemFields[0].Descriptor()
	// problem.DefaultID holds the default value on creation for the id field.
	problem.DefaultID = problemDescID.Default.(func() types.ProblemID)
}
